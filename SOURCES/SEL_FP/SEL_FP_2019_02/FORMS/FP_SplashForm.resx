<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Animation.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhKAAnAPIAAAAAAEBAQExMTP8AAAAAAAAAAAAAAAAAACH5BAkPAAQAIf8LTkVUU0NBUEUyLjAD
        AQAAACwAAAAAKAAnAAADeEi63P4wSiXqvLhqzJ/+XUh9ltiRpcmRT+CGQ+yljGtzcd7ZPJbLHN7t8hvs
        hAEc8DhUMZ3QqHRKrRIA2IeOiu02itOumAGWir2LcvScJS/NYysELa/b73jVFvaeqH0/SnuAgxJ/RIGC
        JoVQjHaHj4l5kJFGeZd4CQAh+QQJDwAEACwAAAAAKAAnAAADeUi63P4wykmrG9jqh/v+SpeBmziQn/cI
        bDlqbGyZcCxTtGXfU17trYqqxkP9gsakcslskgJQzksJrTZ8xqqWgUVprYvu8xu4TpNfZwSsbrvfcIDc
        ddrI7zOR5s4X6i18eDh/FYFzfnV7fUtDDYJKYm2RapOUZ3CYbgkAIfkECQ8ABAAsAAAAACgAJwAAA3pI
        utz+MMpJqxvY6of7/kqXgZs4kJ+HXmPZUqarwqL8SrGWV7N+r8CgcEgsGgmCJOeHSjobu5Vzyog2p8qF
        lYTNaplc6tHxHJvP6GFgLfus35Zt5E3n1Sx0OK03ybPtJw4Agw95QoOIhX9AiI1ojYlnkISPjmkEkZdB
        CQAh+QQJDwAEACwAAAAAKAAnAAADeUi63P4wykmrG9jqh/v+SpeBmziQn4deY9lSpqvCovxKsZZXs36v
        wKBwSCwaJ71gkrADNpk14fOJoi5X16N2y+1GAGCQYKwBmzfjdMXMtqTfFPa58lZP5GF6XbBuNwKAD3Vl
        eQyAh4JkQYeMXYyIXI+Bjo1eBJCWQQkAIfkECQ8ABAAsAAAAACgAJwAAA3pIutz+MMpJqxvY6of7/kqX
        gZs4kJ+HXmPZUqarwqL8SrGWV7N+r8CgcEgkAo7FyHFJ7BGWUOHuCUUGp1UrcEplDp0Kb3JMLpsjgfR5
        kW6nfpC23Ad+yN0WbvweoMPtcw0CgxB1aGqCg4Rnio2MjYtlkJGSjmsEipdDCQAh+QQJDwAEACwAAAAA
        KAAnAAADeki63P4wykmrG9jqh/v+SpeBmziQD6ByI8qo8OdVcK2ZdL1aOKXvlZ7PVmrlAK6kcslsUgJQ
        ZwRKbc4W1OxSSMhWlVxvFCxqeK1G7FjKbrvfEYEcvpDbZem4/c4rU/Z8QX4TgHN9V4R7eCcagQyIb1xu
        km2UlXl0mUwJACH5BAkPAAQALAAAAAAoACcAAAN6SLrc/jBKBeq8uGrMn/5dSH2W2JGl2QSsQ6oOK7tp
        M9ycrHd3j+kzTg93AbaEw9wu5OsEYdCodEoNCa5VyXVbbS624OlwwABzpeOyWSBOqs9tsgOerdvv+DzU
        yyNi0n18EoBIghGEf26Jckx+aI55iHiSd5SVkHqZdQkAIfkECQ8ABAAsAAAAACgAJwAAA3pIutz+MEoV
        6ry4asyf/l1IfZbYkaXZCKxDPkDcsbSbMnGO0TyX/xdeDfPTTYQtYhGw63WKs2TIqKpar9isNjTobgnd
        gSPszZLFjLNWnSav3Y3wV/6t2+/4vJ7OLWPYHIATgheEEYYSiBB8HYxXjniKc3B7lJVoepl4CQA7
</value>
  </data>
</root>